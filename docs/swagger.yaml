basePath: /api/v1
definitions:
  model.AddCommentResponse:
    properties:
      success:
        type: boolean
    type: object
  model.AddSampleResponse:
    properties:
      success:
        type: boolean
    type: object
  model.CreatePatientResponse:
    properties:
      id:
        type: integer
      success:
        type: boolean
    type: object
  model.Patient:
    properties:
      id:
        type: integer
      name:
        type: string
      samples:
        type: integer
    type: object
  model.PatientData:
    properties:
      comments:
        items:
          type: string
        type: array
      date_of_birth:
        type: string
      id:
        type: integer
      name:
        type: string
      samples:
        items:
          type: string
        type: array
      sex:
        type: string
    type: object
  model.PatientList:
    properties:
      patients:
        items:
          $ref: '#/definitions/model.Patient'
        type: array
    type: object
  model.Test:
    properties:
      amount:
        type: integer
      change:
        type: number
      date_created:
        type: string
      id:
        type: string
      usd:
        type: integer
    type: object
info:
  contact: {}
  description: This service is responsible for content delivery. Handles content delivery
    to the user
  license:
    name: MIT License
    url: https://opensource.org/license/mit/
  title: CDN API
  version: "1.0"
paths:
  /add-comment:
    post:
      consumes:
      - application/json
      description: Finds a matching id in the database and adds a comment to the patient
      parameters:
      - description: id of the patient
        in: query
        name: id
        required: true
        type: integer
      - description: comment to add
        in: query
        name: comment
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.AddCommentResponse'
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Adds a comment to a patient
      tags:
      - Patient
  /add-sample:
    post:
      consumes:
      - application/json
      description: Finds a matching id in the database and adds a sample to the patient
      parameters:
      - description: id of the patient
        in: query
        name: id
        required: true
        type: integer
      - description: sample to add
        in: query
        name: sample
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.AddSampleResponse'
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Adds a base64 encoded sample image to a patient
      tags:
      - Patient
  /create-patient:
    post:
      consumes:
      - application/json
      description: Creates a new patient with a randomly assigned ID
      parameters:
      - description: username of the doctor
        in: query
        name: username
        required: true
        type: string
      - description: name of the patient
        in: query
        name: name
        required: true
        type: string
      - description: sex of the patient
        in: query
        name: sex
        required: true
        type: string
      - description: date of birth of the patient
        in: query
        name: dob
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.CreatePatientResponse'
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Creates a table entry for a patient
      tags:
      - Patient
  /patient-data:
    get:
      consumes:
      - application/json
      description: Checks for a matching id in the databse and returns data for that
        id
      parameters:
      - description: id of the patient
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.PatientData'
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Provides data about a patient
      tags:
      - Patient
  /patient-list:
    get:
      consumes:
      - application/json
      description: Finds username in database and retrieves all patients for that
        user
      parameters:
      - description: username of the doctor
        in: query
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.PatientList'
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Retrieves a list of patients for the specified doctor username
      tags:
      - Patient
  /test-no-auth:
    get:
      consumes:
      - application/json
      description: Will ask the service to generate a test json and return it back
        to the requester
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Test'
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Gets a test value from the service, sanity check
      tags:
      - Tests
swagger: "2.0"
